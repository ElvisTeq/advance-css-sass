.experience {
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 1.5rem 2.5rem rgba($color-black, 0.9);
  background-image: linear-gradient(to right, rgba($color-primary-dark, .5) 0%, rgba($color-primary-light, .5));
  border-radius: 3px;
  padding: 5rem;
  padding-left: 6rem;
  font-size: $default-font-size-medium;
  min-height: 25rem;
  transform: skewX(-12deg);

  @include responsive(tablet) {
    width: 100%;
    padding: 4rem;
    padding-left: 7rem;
  }

  @include responsive(phone) {
    transform: skewX(0);
  }
  
  &__background{
    background-color: $color-grey-soft
  }

  &__shape {
    width: 15rem;
    height: 15rem;
    float: left;
    // Only 1 transform can work at the same time
    transform: translateX(-2rem) skewX(12deg);
    position: relative;
    overflow: hidden;
    border-radius: 50%;

    // this run only if clip-path is supported in the browser
    @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
        // Has to be floated + height/width to work
        // circle(radius at center position)
       -webkit-shape-outside: circle(50% at 50% 50%);
       shape-outside: circle(50% at 50% 50%);
       -webkit-clip-path: circle(50% at 50% 50%);
       clip-path: circle(50% at 50% 50%);
       border-radius: none;
    }

    @include responsive(phone) {
      transform: translateX(-3rem) skewX(0);
    }
  }

  &__img {
    // Base on parent element "__shape"
    height: 100%;
    transform: translateX() scale(1);
    backface-visibility: hidden;
    transition: all .5s;


  }

  &__text {
    font-size: $default-font-size-medium;
    transform: skewX(12deg);

    @include responsive(phone) {
      transform: skewX(0);
    }
  }

  &__caption {
    // requires position relative on container
    position: absolute; 
    top: 50%;
    left: 50%;
    transform: translate(-50%, 20%);
    color: $color-white;
    text-transform: uppercase;
    font-size: $default-font-size-small;
    text-align: center;
    opacity: 0;
    transition: all .5s;
    backface-visibility: hidden;
  }

  &:hover &__caption {
    opacity: 1;
    transform: translate(-50%, -50%);
  }

  &:hover &__img {
    transform: translateX(-.3rem) scale(1.1);
    filter: blur(3px) brightness(60%);
  }
}
